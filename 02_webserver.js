/*
  Nodejs를 이용해서 서버를 구동하는 소스
  아래의 소스가 웹브라우저가 요청하는 데이터를 받아들여 웹서버는 출력해준다.

  인터넷
  서버, 클라이언트, IP, port

  인터넷의 의의.
      컴퓨터와 컴퓨터가 인터넷을 이용해서 협력적인 작업이 가능하게 되었다.

  클라이언트(갑) - 인터넷 - 서버(을)의 관계
     요청               응답, 제공

  웹브라우저가 설치되어 있는 컴퓨터가 클라이언트가 요청한다.
  a.com에 있는 서버는 클라이언트에게 응답한다.

  도메인 네임 : 사람이 기억하기 쉽게 만든 이름.
  도메인에 해당하는 주소를 IP라 하고, 컴퓨터는 IP를 기억해서 접속한다.

  서버 컴퓨터에 데이터베이스 서버, 채팅 서버, 게임 서버, 웹 서버 a.com에 설치 되어 있을 수 있다.
  사용자가 a.com을 접속 했을 때 어떤 서버 애플리케이션을 연결 시켜야되는가?

  포트 PORT : 0 ~ 65535개의 문이 있다.
  80번 포트를 웹서버가 listen 하고 있다.

  사용자가 :80을 치게 되면 a.com에 해당되는 컴퓨터한테 80번 포트와 연결하고 싶다고 얘기한다.
  http://a.com:80에 listen하고 있는 웹서버가 응답한다.

  매번 80을 입력하기는 귀찮다. 80은 생략가능.

  80을 생략하면 http를 보고 80을 연결한다.

*/
// http라는 모듈이 요구된다. -> http라고 되있는 부품을 가지고 와서 사용한다.
// 리턴값을 http에 담는다.
const http = require('http');
// 아이피
const hostname = '127.0.0.1';
// 도메인
const port = 1337;


// createServer : 서버 한대를 만듬.
http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.end('Hello World\n');
// 대기를 하게 시킴(포트 1337, 호스트네임 127.0.0.1)
}).listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`);
});
